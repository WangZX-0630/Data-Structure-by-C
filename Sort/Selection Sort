#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void Swap(int *a, int *b) {
    int tmp = *a;
    *a = *b;
    *b = tmp;
}

void SelectionSort(int A[], int N) {
    int MinValue, MinIndex;
    for(int i = 0; i < N - 1; ++i) {
        MinValue = A[i];
        MinIndex = i;
        for(int j = i; j < N; ++j) {
            if(A[j] < MinValue) {
                MinValue = A[j];
                MinIndex = j;
            }
        }
        Swap(&A[i], &A[MinIndex]);
    }
}

void AddRandNum(int array[], int N) {
    srand((unsigned)time(NULL));
    for(int i = 0; i < N; ++i) {
        array[i] = rand() % (10 * N);
    }
}

void test(int array[], int N) {
    SelectionSort(array, N);
    /*for(int i = 0; i < N; ++i) {
        printf("%d,",array[i]);
    }*/
}

int main()
{
    int N = 100000;
    int array[N];
    AddRandNum(array, N);
    clock_t start, finish;
    start = clock();
    test(array, N);
    finish = clock();
    printf("\nProcessing time: %1f ms\n",(double)(finish - start) / 1000);
    return 0;
}

/* On my computer, it costs about 7.6s to sort 10w numbers with HeapSort */
/* Selection Sort:
        Space Complexity: O(1)
        Time Complexity: O(n^2)
        Stability: unstable
*/
